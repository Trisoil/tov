using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using CSharpUtils.Endian;

namespace TalesOfVesperiaUtils.Imaging
{
	/// <summary>
	/// 
	/// </summary>
	public enum GPUTEXTUREFORMAT
	{
		GPUTEXTUREFORMAT_1_REVERSE = 0,
		GPUTEXTUREFORMAT_1 = 1,
		GPUTEXTUREFORMAT_8 = 2,
		GPUTEXTUREFORMAT_1_5_5_5 = 3,
		GPUTEXTUREFORMAT_5_6_5 = 4,
		GPUTEXTUREFORMAT_6_5_5 = 5,
		GPUTEXTUREFORMAT_8_8_8_8 = 6,
		GPUTEXTUREFORMAT_2_10_10_10 = 7,
		GPUTEXTUREFORMAT_8_A = 8,
		GPUTEXTUREFORMAT_8_B = 9,
		GPUTEXTUREFORMAT_8_8 = 10,
		GPUTEXTUREFORMAT_Cr_Y1_Cb_Y0_REP = 11,
		GPUTEXTUREFORMAT_Y1_Cr_Y0_Cb_REP = 12,
		GPUTEXTUREFORMAT_16_16_EDRAM = 13, // EDRAM render target only
		GPUTEXTUREFORMAT_8_8_8_8_A = 14,
		GPUTEXTUREFORMAT_4_4_4_4 = 15,
		GPUTEXTUREFORMAT_10_11_11 = 16,
		GPUTEXTUREFORMAT_11_11_10 = 17,
		GPUTEXTUREFORMAT_DXT1 = 18,
		GPUTEXTUREFORMAT_DXT2_3 = 19,
		GPUTEXTUREFORMAT_DXT4_5 = 20,
		GPUTEXTUREFORMAT_16_16_16_16_EDRAM = 21, // EDRAM render target only
		GPUTEXTUREFORMAT_24_8 = 22,
		GPUTEXTUREFORMAT_24_8_FLOAT = 23,
		GPUTEXTUREFORMAT_16 = 24,
		GPUTEXTUREFORMAT_16_16 = 25,
		GPUTEXTUREFORMAT_16_16_16_16 = 26,
		GPUTEXTUREFORMAT_16_EXPAND = 27,
		GPUTEXTUREFORMAT_16_16_EXPAND = 28,
		GPUTEXTUREFORMAT_16_16_16_16_EXPAND = 29,
		GPUTEXTUREFORMAT_16_FLOAT = 30,
		GPUTEXTUREFORMAT_16_16_FLOAT = 31,
		GPUTEXTUREFORMAT_16_16_16_16_FLOAT = 32,
		GPUTEXTUREFORMAT_32 = 33,
		GPUTEXTUREFORMAT_32_32 = 34,
		GPUTEXTUREFORMAT_32_32_32_32 = 35,
		GPUTEXTUREFORMAT_32_FLOAT = 36,
		GPUTEXTUREFORMAT_32_32_FLOAT = 37,
		GPUTEXTUREFORMAT_32_32_32_32_FLOAT = 38,
		GPUTEXTUREFORMAT_32_AS_8 = 39,
		GPUTEXTUREFORMAT_32_AS_8_8 = 40,
		GPUTEXTUREFORMAT_16_MPEG = 41,
		GPUTEXTUREFORMAT_16_16_MPEG = 42,
		GPUTEXTUREFORMAT_8_INTERLACED = 43,
		GPUTEXTUREFORMAT_32_AS_8_INTERLACED = 44,
		GPUTEXTUREFORMAT_32_AS_8_8_INTERLACED = 45,
		GPUTEXTUREFORMAT_16_INTERLACED = 46,
		GPUTEXTUREFORMAT_16_MPEG_INTERLACED = 47,
		GPUTEXTUREFORMAT_16_16_MPEG_INTERLACED = 48,
		GPUTEXTUREFORMAT_DXN = 49,
		GPUTEXTUREFORMAT_8_8_8_8_AS_16_16_16_16 = 50,
		GPUTEXTUREFORMAT_DXT1_AS_16_16_16_16 = 51,
		GPUTEXTUREFORMAT_DXT2_3_AS_16_16_16_16 = 52,
		GPUTEXTUREFORMAT_DXT4_5_AS_16_16_16_16 = 53,
		GPUTEXTUREFORMAT_2_10_10_10_AS_16_16_16_16 = 54,
		GPUTEXTUREFORMAT_10_11_11_AS_16_16_16_16 = 55,
		GPUTEXTUREFORMAT_11_11_10_AS_16_16_16_16 = 56,
		GPUTEXTUREFORMAT_32_32_32_FLOAT = 57,
		GPUTEXTUREFORMAT_DXT3A = 58,
		GPUTEXTUREFORMAT_DXT5A = 59,
		GPUTEXTUREFORMAT_CTX1 = 60,
		GPUTEXTUREFORMAT_DXT3A_AS_1_1_1_1 = 61,
		GPUTEXTUREFORMAT_8_8_8_8_GAMMA_EDRAM = 62, // EDRAM render target only
		GPUTEXTUREFORMAT_2_10_10_10_FLOAT_EDRAM = 63, // EDRAM render target only
	}

	/// <summary>
	/// 
	/// </summary>
	public enum GPUENDIAN
	{
		GPUENDIAN_NONE = 0,
		GPUENDIAN_8IN16 = 1,
		GPUENDIAN_8IN32 = 2,
		GPUENDIAN_16IN32 = 3,
	}

	/// <summary>
	/// 
	/// </summary>
	public enum GPUSIGN
	{
		GPUSIGN_UNSIGNED = 0,
		GPUSIGN_SIGNED = 1,
		GPUSIGN_BIAS = 2,
		GPUSIGN_GAMMA = 3,
	}

	/// <summary>
	/// 
	/// </summary>
	public enum GPUNUMFORMAT
	{
		GPUNUMFORMAT_FRACTION = 0,
		GPUNUMFORMAT_INTEGER = 1,
	}

	/// <summary>
	/// 
	/// </summary>
	public enum GPUSWIZZLE
	{
		GPUSWIZZLE_X = 0,
		GPUSWIZZLE_Y = 1,
		GPUSWIZZLE_Z = 2,
		GPUSWIZZLE_W = 3,
		GPUSWIZZLE_0 = 4,
		GPUSWIZZLE_1 = 5,
		GPUSWIZZLE_KEEP = 7, // Fetch instructions only
	}

	/// <summary>
	/// 
	/// </summary>
	public struct ImageFormat
	{
		public uint_be _Data;

		private const int D3DFORMAT_TEXTUREFORMAT_SHIFT = 0;       // GPUTEXTUREFORMAT
		private const int D3DFORMAT_ENDIAN_SHIFT = 6;       // GPUENDIAN
		private const int D3DFORMAT_TILED_SHIFT = 8; // BOOL
		private const int D3DFORMAT_SIGNX_SHIFT = 9; // GPUSIGN
		private const int D3DFORMAT_SIGNY_SHIFT = 11; // GPUSIGN
		private const int D3DFORMAT_SIGNZ_SHIFT = 13; // GPUSIGN
		private const int D3DFORMAT_SIGNW_SHIFT = 15; // GPUSIGN
		private const int D3DFORMAT_NUMFORMAT_SHIFT = 17; // GPUNUMFORMAT
		private const int D3DFORMAT_SWIZZLEX_SHIFT = 18; // GPUSWIZZLE
		private const int D3DFORMAT_SWIZZLEY_SHIFT = 21; // GPUSWIZZLE
		private const int D3DFORMAT_SWIZZLEZ_SHIFT = 24; // GPUSWIZZLE
		private const int D3DFORMAT_SWIZZLEW_SHIFT = 27; // GPUSWIZZLE
		private const int D3DFORMAT_SWIZZLE_SHIFT = D3DFORMAT_SWIZZLEX_SHIFT;

		private const int D3DFORMAT_TEXTUREFORMAT_MASK = 0x0000003f;
		private const int D3DFORMAT_ENDIAN_MASK = 0x000000c0;
		private const int D3DFORMAT_TILED_MASK = 0x00000100;
		private const int D3DFORMAT_SIGNX_MASK = 0x00000600;
		private const int D3DFORMAT_SIGNY_MASK = 0x00001800;
		private const int D3DFORMAT_SIGNZ_MASK = 0x00006000;
		private const int D3DFORMAT_SIGNW_MASK = 0x00018000;
		private const int D3DFORMAT_NUMFORMAT_MASK = 0x00020000;
		private const int D3DFORMAT_SWIZZLEX_MASK = 0x001c0000;
		private const int D3DFORMAT_SWIZZLEY_MASK = 0x00e00000;
		private const int D3DFORMAT_SWIZZLEZ_MASK = 0x07000000;
		private const int D3DFORMAT_SWIZZLEW_MASK = 0x38000000;
		private const int D3DFORMAT_SWIZZLE_MASK = (D3DFORMAT_SWIZZLEX_MASK | D3DFORMAT_SWIZZLEY_MASK | D3DFORMAT_SWIZZLEZ_MASK | D3DFORMAT_SWIZZLEW_MASK);

		public GPUTEXTUREFORMAT TextureFormat { get { return (GPUTEXTUREFORMAT)((_Data & D3DFORMAT_TEXTUREFORMAT_MASK) >> D3DFORMAT_TEXTUREFORMAT_SHIFT); } }
		public GPUENDIAN Endian { get { return (GPUENDIAN)((_Data & D3DFORMAT_ENDIAN_MASK) >> D3DFORMAT_ENDIAN_SHIFT); } }
		public bool Tiled { get { return ((_Data & D3DFORMAT_TILED_MASK) >> D3DFORMAT_TILED_SHIFT) != 0; } }
		public GPUSIGN TextureSignX { get { return (GPUSIGN)((_Data & D3DFORMAT_SIGNX_MASK) >> D3DFORMAT_SIGNX_SHIFT); } }
		public GPUSIGN TextureSignY { get { return (GPUSIGN)((_Data & D3DFORMAT_SIGNY_MASK) >> D3DFORMAT_SIGNY_SHIFT); } }
		public GPUSIGN TextureSignZ { get { return (GPUSIGN)((_Data & D3DFORMAT_SIGNZ_MASK) >> D3DFORMAT_SIGNZ_SHIFT); } }
		public GPUSIGN TextureSignW { get { return (GPUSIGN)((_Data & D3DFORMAT_SIGNW_MASK) >> D3DFORMAT_SIGNW_SHIFT); } }
		public GPUNUMFORMAT NumFormat { get { return (GPUNUMFORMAT)((_Data & D3DFORMAT_NUMFORMAT_MASK) >> D3DFORMAT_NUMFORMAT_SHIFT); } }
		public GPUSWIZZLE SwizzleX { get { return (GPUSWIZZLE)((_Data & D3DFORMAT_SWIZZLEX_MASK) >> D3DFORMAT_SWIZZLEX_SHIFT); } }
		public GPUSWIZZLE SwizzleY { get { return (GPUSWIZZLE)((_Data & D3DFORMAT_SWIZZLEY_MASK) >> D3DFORMAT_SWIZZLEY_SHIFT); } }
		public GPUSWIZZLE SwizzleZ { get { return (GPUSWIZZLE)((_Data & D3DFORMAT_SWIZZLEZ_MASK) >> D3DFORMAT_SWIZZLEZ_SHIFT); } }
		public GPUSWIZZLE SwizzleW { get { return (GPUSWIZZLE)((_Data & D3DFORMAT_SWIZZLEW_MASK) >> D3DFORMAT_SWIZZLEW_SHIFT); } }

		public override string ToString()
		{
			return String.Format(
				"ImageFormat(" +
				"TextureFormat={0}," +
				"Endian={1}," +
				"Tiled={2}," +
				"TextureSign={3}," +
				"NumFormat={4}," +
				"Swizzle={5}," +
				")"
				,
				TextureFormat,
				Endian,
				Tiled,
				TextureSignX,
				NumFormat,
				SwizzleX
			);
		}
	}

	public class GpuUtils
	{
		static public int GetBitsPerPixelForEnum(GPUTEXTUREFORMAT GPUTEXTUREFORMAT)
		{
			return g_XGTextureFormatBitsPerPixel[(int)GPUTEXTUREFORMAT];
		}

		static public int[] g_XGTextureFormatBitsPerPixel = new[]
			{
				1,   // GPUTEXTUREFORMAT_1_REVERSE
				1,   // GPUTEXTUREFORMAT_1
				8,   // GPUTEXTUREFORMAT_8
				16,  // GPUTEXTUREFORMAT_1_5_5_5
				16,  // GPUTEXTUREFORMAT_5_6_5
				16,  // GPUTEXTUREFORMAT_6_5_5
				32,  // GPUTEXTUREFORMAT_8_8_8_8
				32,  // GPUTEXTUREFORMAT_2_10_10_10
				8,   // GPUTEXTUREFORMAT_8_A
				8,   // GPUTEXTUREFORMAT_8_B
				16,  // GPUTEXTUREFORMAT_8_8
				16,  // GPUTEXTUREFORMAT_Cr_Y1_Cb_Y0_REP
				16,  // GPUTEXTUREFORMAT_Y1_Cr_Y0_Cb_REP
				32,  // GPUTEXTUREFORMAT_16_16_EDRAM
				32,  // GPUTEXTUREFORMAT_8_8_8_8_A
				16,  // GPUTEXTUREFORMAT_4_4_4_4
				32,  // GPUTEXTUREFORMAT_10_11_11
				32,  // GPUTEXTUREFORMAT_11_11_10
				4,   // GPUTEXTUREFORMAT_DXT1
				8,   // GPUTEXTUREFORMAT_DXT2_3
				8,   // GPUTEXTUREFORMAT_DXT4_5
				64,  // GPUTEXTUREFORMAT_16_16_16_16_EDRAM
				32,  // GPUTEXTUREFORMAT_24_8
				32,  // GPUTEXTUREFORMAT_24_8_FLOAT
				16,  // GPUTEXTUREFORMAT_16
				32,  // GPUTEXTUREFORMAT_16_16
				64,  // GPUTEXTUREFORMAT_16_16_16_16
				16,  // GPUTEXTUREFORMAT_16_EXPAND
				32,  // GPUTEXTUREFORMAT_16_16_EXPAND
				64,  // GPUTEXTUREFORMAT_16_16_16_16_EXPAND
				16,  // GPUTEXTUREFORMAT_16_FLOAT
				32,  // GPUTEXTUREFORMAT_16_16_FLOAT
				64,  // GPUTEXTUREFORMAT_16_16_16_16_FLOAT
				32,  // GPUTEXTUREFORMAT_32
				64,  // GPUTEXTUREFORMAT_32_32
				128, // GPUTEXTUREFORMAT_32_32_32_32
				32,  // GPUTEXTUREFORMAT_32_FLOAT
				64,  // GPUTEXTUREFORMAT_32_32_FLOAT
				128, // GPUTEXTUREFORMAT_32_32_32_32_FLOAT
				8,   // GPUTEXTUREFORMAT_32_AS_8
				16,  // GPUTEXTUREFORMAT_32_AS_8_8
				16,  // GPUTEXTUREFORMAT_16_MPEG
				32,  // GPUTEXTUREFORMAT_16_16_MPEG
				8,   // GPUTEXTUREFORMAT_8_INTERLACED
				8,   // GPUTEXTUREFORMAT_32_AS_8_INTERLACED
				16,  // GPUTEXTUREFORMAT_32_AS_8_8_INTERLACED
				16,  // GPUTEXTUREFORMAT_16_INTERLACED
				16,  // GPUTEXTUREFORMAT_16_MPEG_INTERLACED
				32,  // GPUTEXTUREFORMAT_16_16_MPEG_INTERLACED
				8,   // GPUTEXTUREFORMAT_DXN
				32,  // GPUTEXTUREFORMAT_8_8_8_8_AS_16_16_16_16
				4,   // GPUTEXTUREFORMAT_DXT1_AS_16_16_16_16
				8,   // GPUTEXTUREFORMAT_DXT2_3_AS_16_16_16_16
				8,   // GPUTEXTUREFORMAT_DXT4_5_AS_16_16_16_16
				32,  // GPUTEXTUREFORMAT_2_10_10_10_AS_16_16_16_16
				32,  // GPUTEXTUREFORMAT_10_11_11_AS_16_16_16_16
				32,  // GPUTEXTUREFORMAT_11_11_10_AS_16_16_16_16
				96,  // GPUTEXTUREFORMAT_32_32_32_FLOAT
				4,   // GPUTEXTUREFORMAT_DXT3A
				4,   // GPUTEXTUREFORMAT_DXT5A
				4,   // GPUTEXTUREFORMAT_CTX1
				4,   // GPUTEXTUREFORMAT_DXT3A_AS_1_1_1_1
				32,  // GPUTEXTUREFORMAT_8_8_8_8_GAMMA_EDRAM
				32,  // GPUTEXTUREFORMAT_2_10_10_10_FLOAT_EDRAM
			};
	}
}
